stages:
  - build
  - test
  - analyse
  - package
  - deploy

variables:
  SRC_DIR: app
  TEST_DIR: test
  DOCKER_STACK: docker/docker-stack.yml
  ## Development
  FRONTEND_HOST_DEV: wp-dev.ortolang.fr
  ENVIONMENT_NAME: development
  STACKNAME_DEV: ortolang-catalogue_vdorto
  STACK_ENV_DEV: --env VERSION=master,API_URL=https://repo-dev.ortolang.fr/api,ORTOLANG_NETWORK=ortolang-vdorto,FRONTEND_HOST=wp-dev.ortolang.fr
  ## PreProduction
  FRONTEND_HOST_INT: catalogue-int.ortolang.fr
  STACKNAME_INT: ortolang-catalogue_viorto
  STACK_ENV_INT: --env VERSION=latest,API_URL=https://repo-int.ortolang.fr/api,FRONTEND_HOST=catalogue-int.ortolang.fr,ORTOLANG_NETWORK=ortolang-viorto
  ## Production
  FRONTEND_HOST_PROD: catalogue.ortolang.fr
  STACKNAME_PROD: ortolang-catalogue
  STACK_ENV_PROD: --env VERSION=10.5.0,API_URL=https://repository.ortolang.fr/api,ORTOLANG_NETWORK=ortolang-vporto,FRONTEND_HOST=www.ortolang.fr

include: 
  - project: 'gitlab1/gitlab-ci'
    ref: 2.0.0
    file: '/docker/base_docker.yml'
  - project: 'gitlab1/gitlab-ci'
    ref: 2.0.0
    file: '/npm/build.16.yml'
  - project: 'gitlab1/gitlab-ci'
    ref: 2.0.0
    file: '/docker/package.yml'
  - project: 'gitlab1/gitlab-ci'
    ref: 2.1.0
    file: '/docker/deploy.yml'

npm:test:
  stage: test
  image: docker:18.06
  services:
    - docker:18.06-dind
  tags:
    - ortolang-docker-bind
  script:
    - docker build -f Dockerfile.test -t ortolang-market-test .
    - docker run ortolang-market-test
  only:
    refs:
      - master
      - branches
    changes:
      - Dockerfile.test
      - config/*
      - ${SRC_DIR}/**/*
      - ${TEST_DIR}/**/*
  except:
    - production

dependency-check:scan:
  stage: test
  image: 
    name: owasp/dependency-check
    entrypoint: [""]
  services:
    - docker:18.06-dind
  tags:
    - ortolang-docker-bind
  allow_failure: true
  script:
    - mkdir -p reports/dependency-check
    - /usr/share/dependency-check/bin/dependency-check.sh -s . --format 'ALL' --data /tmp/data --out reports/dependency-check/
  artifacts:
    paths:
      - reports/dependency-check/
  only:
    refs:
      - master
    changes:
      - ${SRC_DIR}/**/*
      - ${TEST_DIR}/**/*
      - sonar-project.properties

sonar:scan:
  stage: analyse
  image: sonarsource/sonar-scanner-cli
  tags:
    - ortolang-docker-bind
  allow_failure: true
  script:
    - sonar-scanner -Dsonar.login=$SONAR_LOGIN
  dependencies:
    - dependency-check:scan
  needs: ["dependency-check:scan"]
  only:
    refs:
      - master
    changes:
      - ${SRC_DIR}/**/*
      - ${TEST_DIR}/**/*
      - sonar-project.properties
