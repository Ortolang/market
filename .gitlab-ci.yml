image: docker:18.06

services:
  - docker:18.06-dind

variables:
  GIT_SSL_NO_VERIFY: "true"
  IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG

stages:
  - test
  - analyze
  - build
  - deploy

test:
  stage: test
  tags:
    - ortolang-docker-bind
  script:
    - docker build -f Dockerfile.test .
  only:
    refs:
      - master
      - branches
    changes:
      - Dockerfile.test
      - config/*
      - src/main/webapp/static/app/**/*
      - src/main/webapp/static/test/**/*

dependency_scanning:
  stage: test
  image: 
    name: owasp/dependency-check
    entrypoint: [""]
  tags:
    - ortolang-docker-bind
  allow_failure: true
  script:
    - mkdir -p reports/dependency-check
    - /usr/share/dependency-check/bin/dependency-check.sh -s . --format 'ALL' --data /tmp/data --out reports/dependency-check/
  artifacts:
    paths:
      - reports/dependency-check/
  only:
    refs:
      - master
    changes:
      - Dockerfile
      - nginx/*
      - config/*
      - src/main/webapp/static/app/**/*

analyze:
  stage: analyze
  image: registry2.atilf.fr/atilf/sonarqube-scanner:1.1.0
  tags:
    - ortolang-docker-bind
  allow_failure: true
  script:
    - /sonar/sonar-scanner-cli/bin/sonar-scanner
  dependencies:
    - dependency_scanning
  only:
    refs:
      - master
    changes:
      - Dockerfile
      - nginx/*
      - config/*
      - src/main/webapp/static/app/**/*

docker_build:
  stage: build
  tags:
    - ortolang-docker-bind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --rm -f Dockerfile -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
  only:
    refs:
      - master
      - branches
    changes:
      - Dockerfile
      - nginx/*
      - config/*
      - src/main/webapp/static/app/**/*

docker_tag_from_master:
  stage: build
  tags:
    - ortolang-docker-bind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:master
    - docker tag $CI_REGISTRY_IMAGE:master $IMAGE_NAME
    - docker push $IMAGE_NAME
  only:
    - tags

deploy_on_dev:
  stage: deploy
  tags:
    - ortolang-docker-bind
  only:
    refs:
      - master
    changes:
      - Dockerfile
      - docker/docker-stack.vdorto.yml
      - nginx/*
      - config/*
      - src/main/webapp/static/app/**/*
  environment:
    name: vdorto
    url: https://www-dev.ortolang.fr
  image: registry2.atilf.fr/atilf/portainer-cli:1.6.0
  script:
    - portainer-cli -u $PORTAINER_USERNAME -p $PORTAINER_PASSWORD -b http://192.168.37.13:9000 deploy -e "Int√©gration-vdorto" -n ortolang-market_vdorto -f docker/docker-stack.vdorto.yml

deploy_on_prod:
  stage: deploy
  tags:
    - ortolang-docker-bind
  only:
    - production
  environment:
    name: production
    url: https://www.ortolang.fr
  image: registry2.atilf.fr/atilf/portainer-cli:1.6.0
  script:
    - portainer-cli -u $PORTAINER_USERNAME -p $PORTAINER_PASSWORD -b http://192.168.37.13:9000 deploy -e "production-vporto" -n ortolang-market -f docker/docker-stack.vporto.yml
