'use strict';

/**
 * @ngdoc function
 * @name ortolangMarketApp.controller:WorkspacesCtrl
 * @description
 * # WorkspacesCtrl
 * Controller of the ortolangMarketApp
 */
angular.module('ortolangMarketApp')
    .controller('WorkspacesCtrl', ['$scope', '$location', '$modal', '$filter', 'Workspace', 'WorkspaceResource', 'Helper', function ($scope, $location, $modal, $filter, Workspace, WorkspaceResource, Helper) {

        // *********************** //
        //     Create Workspace    //
        // *********************** //

        $scope.createWorkspace = function () {
            var createWorkspaceModal,
                spaceRegExp = new RegExp(' +', 'g'),
                dashRegExp = new RegExp('-+', 'g'),
                modalScope = Helper.createModalScope(true, true);

            modalScope.submit = function (createWorkspaceForm) {
                if (!modalScope.models.pendingSubmit) {
                    modalScope.models.pendingSubmit = true;
                    if (createWorkspaceForm.$valid) {
                        WorkspaceResource.createWorkspace({name: modalScope.models.name, alias: modalScope.models.alias, type: 'USER'}, function (newWorkspace) {
                            Workspace.handleWorkspaceCreation(newWorkspace);
                            createWorkspaceModal.hide();
                        }, function (error) {
                            if (error.status === 409) {
                                createWorkspaceForm.alias.$setValidity('availability', false);
                                modalScope.models.autoGenerated = false;
                                modalScope.models.pendingSubmit = false;
                            } else {
                                Helper.showUnexpectedErrorAlert('#create-workspace-modal', 'top');
                                modalScope.models.pendingSubmit = false;
                            }
                        });
                    } else {
                        if (createWorkspaceForm.alias.$error.maxlength) {
                            modalScope.models.autoGenerated = false;
                        }
                        modalScope.models.pendingSubmit = false;
                    }
                }
            };
            modalScope.models.autoGenerated = true;
            modalScope.models.policyConsent = false;
            modalScope.normalizeAlias = function (alias, createWorkspaceForm) {
                alias = $filter('diacritics')(alias);
                modalScope.models.alias = alias ? alias.replace(/[^\w\s\-]/g, '').replace(spaceRegExp, '-').replace(dashRegExp, '-').toLowerCase() : alias;
                createWorkspaceForm.alias.$setValidity('availability', true);
            };
            modalScope.generateAlias = function (createWorkspaceForm) {
                if (modalScope.models.autoGenerated) {
                    modalScope.normalizeAlias(modalScope.models.name, createWorkspaceForm);
                }
            };
            createWorkspaceModal = $modal({
                scope: modalScope,
                templateUrl: 'workspace/templates/create-workspace-modal.html',
                show: true
            });
        };

        $scope.manageWorkspace = function ($event, workspace, section) {
            $event.stopPropagation();
            if (workspace.key !== Workspace.deleted) {
                $location.url('/workspaces/' + workspace.alias + (section ? '?section=' + section : ''));
            }
        };

        (function init() {
            $scope.Workspace = Workspace;
            Workspace.refreshWorkspaceList();
            $scope.models = {};
        }());

    }]);
