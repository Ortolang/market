'use strict';

/**
 * @ngdoc function
 * @name ortolangMarketApp.controller:AddLanguageCtrl
 * @description
 * # AddLanguageCtrl
 * Controller of the ortolangMarketApp
 */
angular.module('ortolangMarketApp')
    .controller('AddLanguageCtrl', ['$scope', '$translate', '$filter', 'Helper', 'WorkspaceMetadataService', 'User',
    	function ($scope, $translate, $filter, Helper, WorkspaceMetadataService, User) {

            var regExp = new RegExp(' +', 'g');

            function normalizeId(id) {
                id = $filter('diacritics')(id);
                $scope.models.id = id ? id.replace(/[^\w\s]/g, '').replace(regExp, '_').toLowerCase() : id;
            }

            $scope.changeLabelLanguage = function () {
                var label = Helper.findObjectOfArray($scope.models.labels, 'lang', $scope.selectedLabelLanguage);
                if (label !== null) {
                    $scope.label = label;
                } else {
                    $scope.label = {lang: $scope.selectedLabelLanguage, value: ''};
                }
            };

            $scope.updateLabel = function () {
                if ($scope.label.value !== '') {
                    var label = Helper.findObjectOfArray($scope.models.labels, 'lang', $scope.selectedLabelLanguage);
                    if (label === null) {
                        $scope.models.labels.push({lang: $scope.selectedLabelLanguage, value: $scope.label.value});
                    } else {
                        label.value = $scope.label.value;
                    }
                    normalizeId($scope.label.value);
                }
            };

            $scope.addLanguageFromScratch = function (form) {
                if (form.$valid) {
                    delete $scope.models.id;

                    if ($scope.language) {
                        // Sets infos of the language
                        WorkspaceMetadataService.setLanguage($scope.language, $scope.models, $scope.metadataLanguagesId);
                    } else {
                        // Adding a new language
                        WorkspaceMetadataService.addLanguage($scope.models, $scope.metadataLanguagesId);
                    }
                    WorkspaceMetadataService.metadataChanged = true;
                    Helper.hideModal();
                }
            };

            $scope.setLanguageFromNewEntity = function (form) {

                if (form.$valid) {
                    WorkspaceMetadataService.replaceLanguage($scope.language, $scope.models, $scope.metadataLanguagesId);

                    WorkspaceMetadataService.metadataChanged = true;
                    Helper.hideModal();
                }
            };

    		function init() {
                //noinspection JSCheckFunctionSignatures
                $scope.languages = [
                    {key: 'fr', value: $translate.instant('LANGUAGES.FR')},
                    {key: 'en', value: $translate.instant('LANGUAGES.EN')},
                    {key: 'es', value: $translate.instant('LANGUAGES.ES')},
                    {key: 'zh', value: $translate.instant('LANGUAGES.ZH')}
                ];

                $scope.User = User;
                $scope.selectedLabelLanguage = 'fr';
                $scope.label = {value: ''};
                $scope.disabled = false;
                $scope.identifier = {autoGenerated: true};

                if ($scope.language) {
                    $scope.models = angular.copy($scope.language.content);
                    if ($scope.models.id) {
                        $scope.disabled = true;
                    }
                    $scope.changeLabelLanguage($scope.selectedTitleLanguage);
                    normalizeId($scope.label.value);
                    $scope.editing = true;
                } else {
                    $scope.models = {};
                    $scope.models.labels = [];
                    $scope.editing = false;
                }

    		}
    		init();
}]);
